{"version":3,"sources":["components/SearchBar.js","components/Picture.js","components/SearchList.js","containers/Search.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","type","onChange","takeInput","placeholder","onClick","btnClick","Picture","handleClick","url","src","alt","width","modalStyle","content","border","padding","overflow","SearchList","imagedata","length","norecordfound","useState","currentImg","setCurrentImg","sucess","map","ele","images","original","Modal","setAppElement","contentLabel","style","isOpen","onRequestClose","options","isFitWidth","Search","searchTxtValue","state","searchValue","fetch","then","response","json","result","setState","data","catch","err","console","log","event","target","value","this","giveMeTheData","title","bind","searchNow","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOACaA,EAAU,SAACC,GACpB,OAAO,sBAAKC,UAAU,aAAf,UAEH,uBAAOC,KAAK,OAAOC,SAAUH,EAAMI,UAAWH,UAAU,eAAeI,YAAY,yBACnF,wBAAQJ,UAAU,kBAAkBK,QAASN,EAAMO,SAAnD,4B,QCHKC,G,MAAQ,SAACR,GAClB,OACE,oBAAIC,UAAU,MAAMK,QAAS,kBAAIN,EAAMS,YAAYT,EAAMU,MAAzD,SACA,qBAAKC,IAAKX,EAAMU,IAAKE,IAAI,mBAAmBC,MAAM,Y,2CCAlDC,EAAW,CACbC,QAAQ,CACJC,OAAO,OACPC,QAAQ,OACRC,SAAS,SAGJC,EAAW,SAACnB,GACHA,EAAMoB,UAAUC,OAAlC,IACMC,EAAc,gDAFS,EAGIC,mBAAS,MAHb,mBAGtBC,EAHsB,KAGXC,EAHW,KAIvBC,EAAQ,mCAGT1B,EAAMoB,UAAUO,KAAI,SAAAC,GAAG,OAAE,cAAC,EAAD,CAASlB,IAAKkB,EAAIC,OAAOC,SAASpB,IAAKD,YAAagB,SAKlF,OADAM,IAAMC,cAAc,SAGhB,sBAAK/B,UAAU,iBAAf,UACI,cAAC,IAAD,CACIgC,aAAa,gBACbC,MAAOpB,EACPqB,SAAUX,EACVY,eAAgB,kBAAIX,EAAc,OAJtC,SAKQ,qBAAKxB,UAAU,cAAcU,IAAKa,EAAYZ,IAAI,oBAEzD,cAAC,IAAD,CAAUyB,QAAS,CAACC,YAAW,GAA/B,SACyB,IAAzBtC,EAAMoB,UAAUC,OAAWC,EAAcI,QChCxCa,EAAd,kDAEI,WAAYvC,GACX,IAAD,8BAEI,cAAMA,IAGDwC,eAAe,GACpB,EAAKC,MAAM,CAACrB,UAAU,IAN1B,EAHJ,iDAYI,SAAcsB,GACb,IAAD,OACUhC,EAAI,mFAAD,OAAoFgC,EAApF,aACKC,MAAMjC,GACZkC,MAAK,SAAAC,GACHA,EAASC,OACbF,MAAK,SAAAG,GACH,EAAKC,SAAS,CAAC5B,UAAU2B,EAAOE,UAGlCC,OAAM,SAAAC,GAAMC,QAAQC,IAAI,gBAAgBF,SAK5CD,OAAM,SAAAC,GACJC,QAAQC,IAAI,2BAA2BF,QA5BnD,uBA+BI,SAAUG,GAER,IAAIL,EAAKK,EAAMC,OAAOC,MACtBC,KAAKjB,eAAeS,IAlC1B,uBAoCI,WAEIQ,KAAKC,cAAcD,KAAKjB,kBAtChC,oBAwCI,WACI,OAAO,2CAAa,oBAAIvC,UAAU,yBAAd,SAAwCwD,KAAKzD,MAAM2D,QACvE,cAAC,EAAD,CAAWvD,UAAWqD,KAAKrD,UAAUwD,KAAKH,MAAOlD,SAAUkD,KAAKI,UAAUD,KAAKH,QAC/E,cAAC,EAAD,CAAYrC,UAAWqC,KAAKhB,MAAMrB,mBA3C1C,GAA6B0C,IAAMC,WCYpBC,MATf,WACE,OACE,qBAAK/D,UAAU,YAAf,SACJ,cAAC,EAAD,CAAQ0D,MAAM,kBCGCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c38c35a1.chunk.js","sourcesContent":["import React from 'react';\r\nexport const SearchBar=(props)=>{\r\n    return(<div className='form-group'>\r\n        \r\n        <input type='text' onChange={props.takeInput} className='form-control' placeholder=\"enter text to search\"/>\r\n        <button className='btn btn-primary' onClick={props.btnClick}>Search Now</button>\r\n        </div>);\r\n\r\n}","import React from 'react';\r\nimport './Picture.css';\r\nexport const Picture=(props)=>{\r\n    return(\r\n      <li className=\"img\" onClick={()=>props.handleClick(props.url)}>\r\n      <img src={props.url} alt=\"Image is missing\" width=\"250\"/>\r\n      \r\n      </li>\r\n      \r\n    );\r\n    \r\n   \r\n}","import React, { useState } from 'react';\r\nimport { Picture } from './Picture';\r\nimport Masonry from 'react-masonry-component';\r\nimport './SearchList.css';\r\nimport Modal from \"react-modal\";\r\nconst modalStyle={\r\n    content:{\r\n        border:\"none\",\r\n        padding:\"none\",\r\n        overflow:\"none\"\r\n    },\r\n};\r\nexport const SearchList=(props)=>{\r\n    let listofRecords=props.imagedata.length;\r\n    const norecordfound=<p>NO RECORD FOUND</p>;\r\n    const [currentImg,setCurrentImg]=useState(null);\r\n    const sucess=(<>\r\n        \r\n        \r\n        {props.imagedata.map(ele=><Picture url={ele.images.original.url} handleClick={setCurrentImg} />)}\r\n        {/*props.imagedata.map(ele=><img src={ele.images.originals.url}/>)*/}\r\n        \r\n    </>);\r\n    Modal.setAppElement(\"#root\");\r\n    return(\r\n       \r\n        <div className=\"grid-container\">\r\n            <Modal\r\n                contentLabel=\"image preview\"\r\n                style={modalStyle}\r\n                isOpen={!!currentImg}\r\n                onRequestClose={()=>setCurrentImg(null)}>\r\n                    <img className=\"img-preview\" src={currentImg} alt=\"image preview\" />\r\n                </Modal>\r\n             <Masonry  options={{isFitWidth:true}} >\r\n            {props.imagedata.length===0?norecordfound:sucess}\r\n            \r\n            </Masonry>\r\n            </div>\r\n            \r\n    \r\n    )\r\n    \r\n}","import React from 'react';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { SearchList } from '../components/SearchList';\r\nexport  class Search extends React.Component{\r\n\r\n    constructor(props)\r\n    { \r\n        //init props and states\r\n        super(props);  //calling the parent constructor\r\n        //init the props from parents and give it to child\r\n        //props={} it is a empty object\r\n        this.searchTxtValue=\"\";\r\n        this.state={imagedata:[]};\r\n    }\r\n\r\n    giveMeTheData(searchValue)\r\n    {\r\n        const url=`https://api.giphy.com/v1/gifs/search?api_key=pGDtHYq6kQjJd7Ukydj6J5GL2HKAs76p&q=${searchValue}&limit=50`;\r\n        const promise=fetch(url);\r\n        promise.then(response=>{\r\n            var p=response.json();\r\n            p.then(result=>{\r\n                this.setState({imagedata:result.data});\r\n            }\r\n\r\n            ).catch(err=>{console.log(\"error in json\",err);}\r\n\r\n            );\r\n        }\r\n\r\n        ).catch(err=>{\r\n            console.log('error coming from server',err);\r\n        });\r\n    }\r\n    takeInput(event)\r\n    {\r\n      let data=event.target.value;\r\n      this.searchTxtValue=data;\r\n    }\r\n    searchNow()\r\n    {\r\n        this.giveMeTheData(this.searchTxtValue);\r\n    }\r\n    render(){\r\n        return(<div>        <h1 className='alert-info text-center'>{this.props.title}</h1>\r\n        <SearchBar takeInput={this.takeInput.bind(this)} btnClick={this.searchNow.bind(this)} />\r\n        <SearchList imagedata={this.state.imagedata}/>\r\n        </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n/*export function Search()\r\n{\r\n    return (<div>        <h1 className='alert-info text-center'>SEARCH ENGINE</h1>\r\n        <SearchBar />\r\n        <SearchList />\r\n        </div>\r\n\r\n      );\r\n}*/","\nimport './App.css';\n\nimport React from 'react';\nimport { Search } from './containers/Search';\n\nfunction App() {\n  return (\n    <div className='container'>\n<Search title=\"SEARCH APP\" />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}